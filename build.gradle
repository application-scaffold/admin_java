plugins {
    id 'io.spring.dependency-management' version '1.1.4' apply false
    id 'org.springframework.boot' version '3.2.0' apply false  // 按需添加
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management' // 依赖管理插件

    group = 'cn.liaozh'
    version = '1.0-SNAPSHOT'

    // 指定JDK版本
    java {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17

        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
        }
    }

    // 读取父项目的 gradle.properties 定义变量，并传递给子项目
    def parentProps = new File(rootProject.rootDir, "gradle.properties")
    if (parentProps.exists()) {
        parentProps.withReader { reader ->
            def props = new Properties()
            props.load(reader)
            props.each { key, value ->
                project.ext.set(key, value)
            }
        }
    }

    // 指定编码格式
    [compileJava,compileTestJava,javadoc]*.options*.encoding = 'UTF-8'

    // 设置全局构建目录
    layout.buildDirectory = file("$rootDir/build/${project.name}")

    repositories {
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/public/'}
        mavenCentral()
    }

    dependencyManagement {
        imports {
            mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES  // Spring Boot BOM 管理
        }
    }
}

subprojects {

    dependencies {
        implementation "com.alibaba.fastjson2:fastjson2:${fastjson2Version}"
        implementation "org.apache.commons:commons-lang3:${commonsLang3Version}"
        implementation 'commons-io:commons-io:2.19.0'
        implementation "cn.hutool:hutool-all:${hutoolUtilVersion}"
        compileOnly "org.projectlombok:lombok:$lombokVersion"
        annotationProcessor "org.projectlombok:lombok:$lombokVersion"
        testImplementation platform('org.junit:junit-bom:5.10.0')
        testImplementation 'org.junit.jupiter:junit-jupiter'
    }

    test {
        useJUnitPlatform()
    }
}

